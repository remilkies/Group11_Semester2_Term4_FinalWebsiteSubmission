    //BOOKMARK, WISHLIST, ICON HOVER + CLICK ACTIVE + TOGGLER
    const iconBookmarks = document.querySelectorAll(".watchlistIcon");

    
    iconBookmarks.forEach((iconBookmark) => {
      let isActive = false;
    
    iconBookmark.addEventListener("mouseenter", () => {
      if (!isActive) {
        iconBookmark.src = iconBookmark.dataset.hover;
      }
    });

    iconBookmark.addEventListener("mouseleave", () => {
      if (!isActive) {
        iconBookmark.src = iconBookmark.dataset.default;
      }
    });

    // toggle - makes the bookmark stay pink
    iconBookmark.addEventListener("click", () => {
      isActive = !isActive;
      iconBookmark.src = isActive ? iconBookmark.dataset.active : iconBookmark.dataset.default;
    });
    });

    // this is for the watch button toggled to watchedButton
    const watchButton = document.querySelectorAll(".watchButton");

    watchButton.forEach((watchButton) => {
        let isActive = false;

        watchButton.addEventListener("click", () => {
            isActive = !isActive;
            watchButton.src = isActive ? watchButton.dataset.active : watchButton.dataset.default;
        });
    });

    const movieCard = document.querySelectorAll(".movieCard")


/*    The Home Page / Landing Page brief instructions
 ● This page must contain an automatic slider header that is 
populated dynamically using the movie content from the API.
 ● This must be newly released movies, their titles, artwork, director 
and viewer rating.
 ● The landing page must welcome the signed in user ‘somewhere’ on 
your page. This username must be pulled from the browser local 
storage.
 ● The page must include a section for Most Popular / Top rated 
Movies, dynamically generated by the API. */
    
    //Homepage
class Movies {
  constructor(newMovies, title, poster, director, rating){
        this.newMovies = newMovies;
        this.title = title;
        this.poster = poster;
        this.director = director;
        this.rating = rating;
    }
}
    
    //API request

    !async function(){
const url = 'https://youtube138.p.rapidapi.com/auto-complete/?q=desp&hl=en&gl=US';
const options = {
	method: 'GET',
	headers: {
		'x-rapidapi-key': '4a2c683a26mshe55148b0462dfc4p159903jsn25e1e7480bae',
		'x-rapidapi-host': 'youtube138.p.rapidapi.com'
	}
};

let data = await fetch(url, options)
        .then((response)=> response.json())
        .then((result)=> {return result})
        .catch((error)=> console.log(error));

}();


let movieList = [];

    for (i = 0; i < data.movies.length; i++){

        let newMovies = data.movies[i].now_playing;
        let title = data.movies[i].title;
        let poster = data.movies[i].poster_path;
       //can't find endpoint let director = data.movies[i].tbd;
        let rating = data.movies[i].vote_average;

        movieList.push(window["movie_" + i] = new Movies(newMovies, title, poster,director, rating)); //names object as movie_0, then movie_1, then movie_2 ect.
    }

    console.log(movieList);



    //get new released movies